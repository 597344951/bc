<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zltel.broadcast.template.dao.TemplateContentMapper">
	<resultMap id="BaseResultMap" type="com.zltel.broadcast.template.bean.TemplateContent">
		<id column="tp_id" jdbcType="INTEGER" property="tpId" />
		<result column="tp_type_id" jdbcType="INTEGER" property="tpTypeId" />
		<result column="orgid" jdbcType="INTEGER" property="orgid" />
		<result column="uid" jdbcType="INTEGER" property="uid" />
		<result column="title" jdbcType="VARCHAR" property="title" />
		<result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zltel.broadcast.template.bean.TemplateContent">
		<result column="content" jdbcType="LONGVARCHAR" property="content" />
	</resultMap>
	<sql id="Base_Column_List">
		tp_id, tp_type_id, orgid, uid, title, createtime
	</sql>
	<sql id="Blob_Column_List">
		content
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from template_content
		where tp_id = #{tpId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from template_content
		where tp_id = #{tpId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.zltel.broadcast.template.bean.TemplateContent">
		insert into template_content (tp_id, tp_type_id, orgid,
		uid, title, createtime,
		content)
		values (#{tpId,jdbcType=INTEGER}, #{tpTypeId,jdbcType=INTEGER}, #{orgid,jdbcType=INTEGER},
		#{uid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP},
		#{content,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.zltel.broadcast.template.bean.TemplateContent">
		insert into template_content
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="tpId != null">
				tp_id,
			</if>
			<if test="tpTypeId != null">
				tp_type_id,
			</if>
			<if test="orgid != null">
				orgid,
			</if>
			<if test="uid != null">
				uid,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="createtime != null">
				createtime,
			</if>
			<if test="content != null">
				content,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="tpId != null">
				#{tpId,jdbcType=INTEGER},
			</if>
			<if test="tpTypeId != null">
				#{tpTypeId,jdbcType=INTEGER},
			</if>
			<if test="orgid != null">
				#{orgid,jdbcType=INTEGER},
			</if>
			<if test="uid != null">
				#{uid,jdbcType=INTEGER},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="content != null">
				#{content,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.zltel.broadcast.template.bean.TemplateContent">
		update template_content
		<set>
			<if test="tpTypeId != null">
				tp_type_id = #{tpTypeId,jdbcType=INTEGER},
			</if>
			<if test="orgid != null">
				orgid = #{orgid,jdbcType=INTEGER},
			</if>
			<if test="uid != null">
				uid = #{uid,jdbcType=INTEGER},
			</if>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				createtime = #{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where tp_id = #{tpId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zltel.broadcast.template.bean.TemplateContent">
		update template_content
		set tp_type_id = #{tpTypeId,jdbcType=INTEGER},
		orgid = #{orgid,jdbcType=INTEGER},
		uid = #{uid,jdbcType=INTEGER},
		title = #{title,jdbcType=VARCHAR},
		createtime = #{createtime,jdbcType=TIMESTAMP},
		content = #{content,jdbcType=LONGVARCHAR}
		where tp_id = #{tpId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.zltel.broadcast.template.bean.TemplateContent">
		update template_content
		set tp_type_id = #{tpTypeId,jdbcType=INTEGER},
		orgid = #{orgid,jdbcType=INTEGER},
		uid = #{uid,jdbcType=INTEGER},
		title = #{title,jdbcType=VARCHAR},
		createtime = #{createtime,jdbcType=TIMESTAMP}
		where tp_id = #{tpId,jdbcType=INTEGER}
	</update>
	<sql id="QUERY_WHERE">
		<where>
			<if test="tpId != null">
				AND tp_id = #{tpId,jdbcType=INTEGER}
			</if>
			<if test="tpTypeId != null">
				AND tp_type_id = #{tpTypeId,jdbcType=INTEGER} 
			</if>
			<if test="orgid != null">
				AND orgid = #{orgid,jdbcType=INTEGER}
			</if>
			<if test="uid != null">
				AND uid = #{uid,jdbcType=INTEGER} 
			</if>
		</where>
	</sql>
	<select id="queryByType" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from template_content
		<include refid="QUERY_WHERE" />
	</select>
	<delete id="delete">
		delete from template_content <include refid="QUERY_WHERE" />
	</delete>
	<select id="query" resultMap="ResultMapWithBLOBs" parameterType="com.zltel.broadcast.template.bean.TemplateContent">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from template_content
		<include refid="QUERY_WHERE" />
	</select>
</mapper>