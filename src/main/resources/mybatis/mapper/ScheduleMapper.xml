<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zltel.broadcast.threeone.schedule.dao.ScheduleMapper">
    <resultMap id="BaseResultMap" type="com.zltel.broadcast.threeone.schedule.bean.Schedule">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="place" jdbcType="VARCHAR" property="place"/>
        <result column="start_time" jdbcType="TIMESTAMP" property="startTime"/>
        <result column="end_time" jdbcType="TIMESTAMP" property="endTime"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="org_id" jdbcType="INTEGER" property="orgId"/>
        <result column="add_date" jdbcType="TIMESTAMP" property="addDate"/>
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, name, description, type, place, start_time, end_time, state, user_id, org_id, add_date, update_date
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from threeone_schedule
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from threeone_schedule
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.zltel.broadcast.threeone.schedule.bean.Schedule">
        insert into threeone_schedule (id, name, description,
        type, place, start_time, end_time, state, user_id, org_id, add_date, update_date
        )
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
        #{type,jdbcType=INTEGER}, #{place,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP},
        #{endTime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
        #{orgId,jdbcType=INTEGER}, #{addDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.zltel.broadcast.threeone.schedule.bean.Schedule"
            useGeneratedKeys="true" keyProperty="id">
        insert into threeone_schedule
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="place != null">
                place,
            </if>
            <if test="startTime != null">
                start_time,
            </if>
            <if test="endTime != null">
                end_time,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="orgId != null">
                org_id,
            </if>
            <if test="addDate != null">
                add_date,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="place != null">
                #{place,jdbcType=VARCHAR},
            </if>
            <if test="startTime != null">
                #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="orgId != null">
                #{orgId,jdbcType=INTEGER},
            </if>
            <if test="addDate != null">
                #{addDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.zltel.broadcast.threeone.schedule.bean.Schedule">
        update threeone_schedule
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="place != null">
                place = #{place,jdbcType=VARCHAR},
            </if>
            <if test="startTime != null">
                start_time = #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                end_time = #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="orgId != null">
                org_id = #{orgId,jdbcType=INTEGER},
            </if>
            <if test="addDate != null">
                add_date = #{addDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zltel.broadcast.threeone.schedule.bean.Schedule">
        update threeone_schedule
        set name = #{name,jdbcType=VARCHAR},
        description = #{description,jdbcType=VARCHAR},
        type = #{type,jdbcType=INTEGER},
        place = #{place,jdbcType=VARCHAR},
        start_time = #{startTime,jdbcType=TIMESTAMP},
        end_time = #{endTime,jdbcType=TIMESTAMP},
        state = #{state,jdbcType=INTEGER},
        user_id = #{userId,jdbcType=INTEGER},
        org_id = #{orgId,jdbcType=INTEGER},
        add_date = #{addDate,jdbcType=TIMESTAMP},
        update_date = #{updateDate,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByTime" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from threeone_schedule
        <where>
            <if test="orgId != null">
                AND org_id >= #{orgId,jdbcType=INTEGER}
            </if>
            <if test="timeStartFrom != null">
                AND start_time >= #{timeStartFrom,jdbcType=TIMESTAMP}
            </if>
            <if test="timeStartTo != null">
                <![CDATA[ AND start_time <= #{timeStartTo,jdbcType=TIMESTAMP} ]]>
            </if>

            <if test="timeEndFrom != null">
                AND end_time >= #{timeEndFrom,jdbcType=TIMESTAMP}
            </if>
            <if test="timeEndTo != null">
                <![CDATA[ AND end_time <= #{timeEndTo,jdbcType=TIMESTAMP} ]]>
            </if>
            <if test="types != null">
                AND type in
                <foreach collection="types" item="type" open="(" close=")" separator=",">
                    #{type,jdbcType=INTEGER}
                </foreach>
            </if>
        </where>
        order by start_time
        <if test="turn != null">
            ${turn}
        </if>
    </select>
    <select id="selectMembers" resultType="java.util.Map">
        select
        bu.base_user_id as id,
        bu.name as name,
        bu.sex as sex,
        bu.home_address_detail as address,
        o.org_rlt_info_id as orgId,
        case when bu.is_party = 1 then "党员" when bu.positive_user = 1 then "预备党员" else "群众" end as background,
        case when pu.join_date_formal is not null then pu.join_date_formal when pu.join_date_reserve is not null then
        pu.join_date_reserve else null end as joinDate
        from base_user_info bu
        left join party_user_info pu on pu.party_user_id = bu.base_user_id
        left join organization_relation o on o.org_rlt_user_id = bu.base_user_id
        left join threeone_schedule_participant tsp on tsp.user_id = bu.base_user_id
        <where>
            <if test="orgId != null">
                AND o.org_rlt_info_id = #{orgId,jdbcType=INTEGER}
            </if>
            <if test="scheduleId != null">
                AND tsp.schedule_id = #{scheduleId,jdbcType=INTEGER}
            </if>
        </where>
    </select>
    <insert id="inertMemberLink" parameterType="java.util.Map">
        insert into threeone_schedule_participant (user_id, schedule_id, participated_date, add_date, update_date)
        values (#{userId,jdbcType=INTEGER},
        #{scheduleId,jdbcType=INTEGER},
        #{participatedDate,jdbcType=TIMESTAMP},
        #{addDate,jdbcType=TIMESTAMP},
        #{updateDate,jdbcType=TIMESTAMP}
        )
    </insert>
    <update id="updateMemberLink" parameterType="java.util.Map">
        update threeone_schedule_participant
        <set>
            <if test="participatedDate != null">
                participated_date = #{participatedDate,jdbcType=TIMESTAMP},
            </if>
            <if test="isParticipate != null">
                is_participate = #{isParticipate,jdbcType=INTEGER},
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER} AND schedule_id = #{scheduleId,jdbcType=INTEGER}
    </update>
    <delete id="deleteMemberLinkBySchedule" parameterType="java.lang.Integer">
        delete from threeone_schedule_participant
        where schedule_id = #{scheduleId,jdbcType=INTEGER}
    </delete>
    <select id="selectByUsername" resultType="java.util.Map">
        SELECT
            S.id AS id,
            S.name AS name,
            S.description AS description,
            S.type AS type,
            S.place AS place,
            S.start_time AS startTime,
            S.end_time AS endTime,
            S.state AS state,
            S.user_id AS userId,
            S.org_id AS orgId,
            S.add_date AS addDate,
            S.update_date AS updateDate,
            U.base_user_id AS participantId
        FROM threeone_schedule S
        INNER JOIN threeone_schedule_participant P ON P.schedule_id = S.id
        INNER JOIN base_user_info U ON U.base_user_id = P.user_id
        INNER JOIN sys_user SU ON SU.username = U.id_card
        WHERE SU.username = #{username}
        <if test="types != null">
            AND S.type in
            <foreach collection="types" item="type" open="(" close=")" separator=",">
                #{type,jdbcType=INTEGER}
            </foreach>
        </if>
    </select>

</mapper>