<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zltel.broadcast.eventplan.dao.EventListMapper">
	<resultMap id="BaseResultMap" type="com.zltel.broadcast.eventplan.bean.EventList">
		<id column="event_id" jdbcType="INTEGER" property="eventId" />
		<result column="org_id" jdbcType="INTEGER" property="orgId" />
		<result column="title" jdbcType="VARCHAR" property="title" />
		<result column="stime" jdbcType="DATE" property="stime" />
		<result column="etime" jdbcType="DATE" property="etime" />
		<result column="priority" jdbcType="INTEGER" property="priority" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="source" jdbcType="VARCHAR" property="source" />
		<result column="status" jdbcType="INTEGER" property="status" />
	</resultMap>
	<!-- 关联懒加载 相关推荐活动 -->
	<resultMap id="ResultMapWithSuggests" extends="BaseResultMap"
		type="com.zltel.broadcast.eventplan.bean.EventList">
		<collection column="event_id" property="suggestItems"
			select="com.zltel.broadcast.plansuggest.dao.EventPlanSuggestItemMapper.selectByEventId"></collection>
	</resultMap>
	<sql id="Base_Column_List">
		event_id, org_id, title, stime, etime, priority, remark, source, status
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from event_list
		where event_id = #{eventId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from event_list
		where event_id =
		#{eventId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.zltel.broadcast.eventplan.bean.EventList">
		insert into event_list (event_id, org_id, title,
		stime,
		etime, priority,
		remark,
		source, status)
		values (#{eventId,jdbcType=INTEGER},
		#{orgId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR},
		#{stime,jdbcType=DATE},
		#{etime,jdbcType=DATE}, #{priority,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR},
		#{source,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.zltel.broadcast.eventplan.bean.EventList">
		insert into event_list
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="eventId != null">
				event_id,
			</if>
			<if test="orgId != null">
				org_id,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="stime != null">
				stime,
			</if>
			<if test="etime != null">
				etime,
			</if>
			<if test="priority != null">
				priority,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="source != null">
				source,
			</if>
			<if test="status != null">
				status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="eventId != null">
				#{eventId,jdbcType=INTEGER},
			</if>
			<if test="orgId != null">
				#{orgId,jdbcType=INTEGER},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="stime != null">
				#{stime,jdbcType=DATE},
			</if>
			<if test="etime != null">
				#{etime,jdbcType=DATE},
			</if>
			<if test="priority != null">
				#{priority,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="source != null">
				#{source,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.zltel.broadcast.eventplan.bean.EventList">
		update event_list
		<set>
			<if test="orgId != null">
				org_id = #{orgId,jdbcType=INTEGER},
			</if>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="stime != null">
				stime = #{stime,jdbcType=DATE},
			</if>
			<if test="etime != null">
				etime = #{etime,jdbcType=DATE},
			</if>
			<if test="priority != null">
				priority = #{priority,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="source != null">
				source = #{from,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
		</set>
		where event_id = #{eventId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.zltel.broadcast.eventplan.bean.EventList">
		update event_list
		set org_id =
		#{orgId,jdbcType=INTEGER},
		title =
		#{title,jdbcType=VARCHAR},
		stime = #{stime,jdbcType=DATE},
		etime =
		#{etime,jdbcType=DATE},
		priority =
		#{priority,jdbcType=INTEGER},
		remark = #{remark,jdbcType=VARCHAR},
		source = #{source,jdbcType=VARCHAR},
		status =
		#{status,jdbcType=INTEGER}
		where event_id =
		#{eventId,jdbcType=INTEGER}
	</update>

	<!-- 查询 EventList -->
	<select id="queryForList" resultMap="BaseResultMap"
		parameterType="com.zltel.broadcast.eventplan.bean.EventList">
		select * from event_list
		<include refid="EventListWhere" />
	</select>

	<!-- 查询条件 EventList -->
	<sql id="EventListWhere">
		<where>
			<if test="eventId != null">
				AND event_id=#{eventId}
			</if>
			<if test="etime != null">
				AND etime=#{etime}
			</if>
			<if test="stime != null">
				AND stime=#{stime}
			</if>
			<if test="remark != null">
				AND remark=#{remark}
			</if>
			<if test="source != null">
				AND source=#{from}
			</if>
			<if test="title != null">
				AND title=#{title}
			</if>
			<if test="priority != null">
				AND priority=#{priority}
			</if>
			<if test="orgId != null">
				AND org_id=#{orgId}
			</if>
			<if test="status != null">
				AND status=#{status}
			</if>
		</where>
	</sql>

	<select id="queryInTime" resultMap="ResultMapWithSuggests"
		parameterType="com.zltel.broadcast.eventplan.bean.EventList">
		select * from event_list
		<where>
			<if test="eventId != null">
				AND event_id=#{eventId}
			</if>
			<if test="remark != null">
				AND remark=#{remark}
			</if>
			<if test="source != null">
				AND source=#{from}
			</if>
			<if test="title != null">
				AND title=#{title}
			</if>
			<if test="priority != null">
				AND priority=#{priority}
			</if>
			<if test="orgId != null">
				AND org_id=#{orgId}
			</if>
			<if test="status != null">
				AND status=#{status}
			</if>
			<if test="stime != null">
				AND stime >= #{stime}
			</if>
			<if test="etime != null">
				AND stime <![CDATA[ < ]]>
				#{etime}
			</if>
			<if test="froms != null">
				AND source in
				<foreach collection="froms" item="f" index="index" open="(" close=")" separator=",">
					#{f}
				</foreach>
			</if>
			<if test="prioritys != null">
				AND priority in
				<foreach collection="prioritys" item="it" index="index" open="(" close=")" separator=",">
					#{it}
				</foreach>
			</if>
			<if test="statuss != null">
				AND status in
				<foreach collection="statuss" item="it" index="index" open="(" close=")" separator=",">
					#{it}
				</foreach>
			</if>
		</where>
	</select>

</mapper>