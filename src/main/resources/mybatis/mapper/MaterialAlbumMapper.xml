<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zltel.broadcast.resource.dao.MaterialAlbumMapper">
	<resultMap id="BaseResultMap" type="com.zltel.broadcast.resource.bean.MaterialAlbum">
		<id column="album_id" jdbcType="INTEGER" property="albumId" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="orgid" jdbcType="INTEGER" property="orgid" />
		<result column="uid" jdbcType="INTEGER" property="uid" />
		<result column="parent" jdbcType="INTEGER" property="parent" />
		<result column="order_num" jdbcType="INTEGER" property="orderNum" />
		<result column="builtin" jdbcType="BIT" property="builtin" />
		<result column="learn_resource" jdbcType="BIT" property="learnResource" />
	</resultMap>
	<sql id="Base_Column_List">
		album_id, name, remark, orgid, uid, parent, order_num,
		builtin,icon,learn_resource
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from resource_material_album
		where album_id = #{albumId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from resource_material_album
		where
		album_id =
		#{albumId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.zltel.broadcast.resource.bean.MaterialAlbum">
		insert into resource_material_album (album_id, name,
		remark,
		orgid, uid, parent,
		order_num, builtin,icon,learn_resource)
		values
		(#{albumId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{remark,jdbcType=VARCHAR},
		#{orgid,jdbcType=INTEGER},
		#{uid,jdbcType=INTEGER}, #{parent,jdbcType=INTEGER},
		#{orderNum,jdbcType=INTEGER},
		#{builtin,jdbcType=BIT},#{icon,jdbcType=VARCHAR},#{learnResource,jdbcType=BIT})
	</insert>
	<insert id="insertSelective" parameterType="com.zltel.broadcast.resource.bean.MaterialAlbum">
		insert into resource_material_album
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="albumId != null">
				album_id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="orgid != null">
				orgid,
			</if>
			<if test="uid != null">
				uid,
			</if>
			<if test="parent != null">
				parent,
			</if>
			<if test="orderNum != null">
				order_num,
			</if>
			<if test="builtin != null">
				builtin,
			</if>
			<if test="icon != null">
				icon,
			</if>
			<if test="learnResource != null">
				learn_resource,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="albumId != null">
				#{albumId,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="orgid != null">
				#{orgid,jdbcType=INTEGER},
			</if>
			<if test="uid != null">
				#{uid,jdbcType=INTEGER},
			</if>
			<if test="parent != null">
				#{parent,jdbcType=INTEGER},
			</if>
			<if test="orderNum != null">
				#{orderNum,jdbcType=INTEGER},
			</if>
			<if test="builtin != null">
				#{builtin,jdbcType=BIT},
			</if>
			<if test="icon != null">
				#{icon,jdbcType=VARCHAR},
			</if>
			<if test="learnResource != null">
				#{learnResource,jdbcType=BIT},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.zltel.broadcast.resource.bean.MaterialAlbum">
		update resource_material_album
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="orgid != null">
				orgid = #{orgid,jdbcType=INTEGER},
			</if>
			<if test="uid != null">
				uid = #{uid,jdbcType=INTEGER},
			</if>
			<if test="parent != null">
				parent = #{parent,jdbcType=INTEGER},
			</if>
			<if test="orderNum != null">
				order_num = #{orderNum,jdbcType=INTEGER},
			</if>
			<if test="builtin != null">
				builtin = #{builtin,jdbcType=BIT},
			</if>
			<if test="icon != null">
				icon = #{icon,jdbcType=VARCHAR},
			</if>
			<if test="learnResource != null">
				learn_resource=#{learnResource,jdbcType=BIT},
			</if>
		</set>
		where album_id = #{albumId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.zltel.broadcast.resource.bean.MaterialAlbum">
		update resource_material_album
		set name =
		#{name,jdbcType=VARCHAR},
		remark =
		#{remark,jdbcType=VARCHAR},
		orgid =
		#{orgid,jdbcType=INTEGER},
		uid = #{uid,jdbcType=INTEGER},
		parent =
		#{parent,jdbcType=INTEGER},
		order_num = #{orderNum,jdbcType=INTEGER},
		builtin =
		#{builtin,jdbcType=BIT},
		icon = #{icon,jdbcType=VARCHAR},
		learn_resource=#{learnResource,jdbcType=BIT}
		where album_id =
		#{albumId,jdbcType=INTEGER}
	</update>

	<select id="listMaterialAlbum"
		parameterType="com.zltel.broadcast.resource.bean.MaterialAlbum" resultMap="BaseResultMap">
		select ma.*
		, CASE WHEN COUNT IS NULL THEN 0 ELSE COUNT END count
		from resource_material_album ma
		LEFT JOIN(
		select m.album_id,count(1) COUNT from resource_material m
		where 1=1
		<if test="orgid != null and orgid !=''">
			and (m.org_id=#{orgid} or m.org_id=0 )
		</if>
		<if test="uid != null and uid !=''">
			and m.user_id = #{uid}
		</if>
		<if test="keyword != null and keyword !=''">
			AND m.name like concat('%',#{keyword},'%')
		</if>
		<if test="verify != null">
			AND m.verify =#{verify}
		</if>
		<if test="noVerify != null">
			AND isNull(m.verify)
		</if>
		<if test="type != null">
			AND m.type = #{type}
		</if>
		group by m.album_id

		) t ON ma.album_id = t.album_id
		<include refid="QUERY_WHERE" />
		order by order_num asc
	</select>

	<sql id="QUERY_WHERE">
		<where>
			<include refid="BASE_WHERE_PARAMS" />
			<!-- 查询内置 -->
			<if test="orgid != null">
				OR orgid = 0
			</if>
		</where>
	</sql>
	<sql id="BASE_WHERE_PARAMS">
		<if test="uid != null">
			AND uid=#{uid}
		</if>
		<if test="parent != null">
			AND parent=#{parent}
		</if>
		<if test="builtin != null">
			AND builtin=#{builtin}
		</if>
		<if test="name != null">
			AND name=#{name}
		</if>
		<if test="albumId != null">
			AND album_id=#{albumId}
		</if>
		<if test="orderNum != null">
			AND order_num=#{orderNum}
		</if>
		<if test="remark != null">
			AND remark=#{remark}
		</if>
		<if test="orgid != null">
			AND (orgid=#{orgid})
		</if>
		<if test="learnResource != null">
			AND learn_resource=#{learnResource,jdbcType=BIT}
		</if>
	</sql>
</mapper>