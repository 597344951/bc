<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zltel.broadcast.template.dao.TemplateTypeMapper">
	<resultMap id="BaseResultMap" type="com.zltel.broadcast.template.bean.TemplateType">
		<id column="tp_type_id" jdbcType="INTEGER" property="tpTypeId" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="orgid" jdbcType="INTEGER" property="orgid" />
		<result column="parent" jdbcType="INTEGER" property="parent" />
		<result column="order_num" jdbcType="INTEGER" property="orderNum" />
		<result column="builtin" jdbcType="BIT" property="builtin" />
		<result column="count" jdbcType="INTEGER" property="count" />
	</resultMap>
	<sql id="Base_Column_List">
		tp_type_id, name, remark, orgid, parent, order_num, builtin
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from template_type
		where tp_type_id = #{tpTypeId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from template_type
		where tp_type_id =
		#{tpTypeId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.zltel.broadcast.template.bean.TemplateType">
		insert into template_type (tp_type_id, name, remark,
		orgid, parent, order_num,
		builtin)
		values (#{tpTypeId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
		#{orgid,jdbcType=INTEGER}, #{parent,jdbcType=INTEGER}, #{orderNum,jdbcType=INTEGER},
		#{builtin,jdbcType=BIT})
	</insert>
	<insert id="insertSelective" parameterType="com.zltel.broadcast.template.bean.TemplateType">
		insert into template_type
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="tpTypeId != null">
				tp_type_id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="orgid != null">
				orgid,
			</if>
			<if test="parent != null">
				parent,
			</if>
			<if test="orderNum != null">
				order_num,
			</if>
			<if test="builtin != null">
				builtin,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="tpTypeId != null">
				#{tpTypeId,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="orgid != null">
				#{orgid,jdbcType=INTEGER},
			</if>
			<if test="parent != null">
				#{parent,jdbcType=INTEGER},
			</if>
			<if test="orderNum != null">
				#{orderNum,jdbcType=INTEGER},
			</if>
			<if test="builtin != null">
				#{builtin,jdbcType=BIT},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.zltel.broadcast.template.bean.TemplateType">
		update template_type
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="orgid != null">
				orgid = #{orgid,jdbcType=INTEGER},
			</if>
			<if test="parent != null">
				parent = #{parent,jdbcType=INTEGER},
			</if>
			<if test="orderNum != null">
				order_num = #{orderNum,jdbcType=INTEGER},
			</if>
			<if test="builtin != null">
				builtin = #{builtin,jdbcType=BIT},
			</if>
		</set>
		where tp_type_id = #{tpTypeId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.zltel.broadcast.template.bean.TemplateType">
		update template_type
		set name = #{name,jdbcType=VARCHAR},
		remark =
		#{remark,jdbcType=VARCHAR},
		orgid = #{orgid,jdbcType=INTEGER},
		parent = #{parent,jdbcType=INTEGER},
		order_num =
		#{orderNum,jdbcType=INTEGER},
		builtin = #{builtin,jdbcType=BIT}
		where tp_type_id = #{tpTypeId,jdbcType=INTEGER}
	</update>

	<sql id="BASE_WHERE_PARAMS">
		<if test="tpTypeId != null">
			AND tp_type_id = #{tpTypeId,jdbcType=INTEGER}
		</if>
		<if test="name != null">
			AND name = #{name,jdbcType=VARCHAR}
		</if>
		<if test="remark != null">
			AND remark = #{remark,jdbcType=VARCHAR}
		</if>
		<if test="orgid != null">
			AND orgid = #{orgid,jdbcType=INTEGER}
		</if>
		<if test="parent != null">
			AND parent = #{parent,jdbcType=INTEGER}
		</if>
		<if test="orderNum != null">
			AND order_num = #{orderNum,jdbcType=INTEGER}
		</if>
		<if test="builtin != null">
			AND builtin = #{builtin,jdbcType=BIT}
		</if>
	</sql>

	<sql id="QUERY_WHERE">
		<where>
			<include refid="BASE_WHERE_PARAMS" />
			<!-- 查询内置 -->
			OR orgid = 0
		</where>
	</sql>
	<select id="query" parameterType="com.zltel.broadcast.template.bean.TemplateType" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from template_type
		<include refid="QUERY_WHERE" />
	</select>
	<select id="queryEachCount" parameterType="com.zltel.broadcast.template.bean.TemplateType" resultMap="BaseResultMap">
		SELECT tt.*, CASE WHEN COUNT IS NULL THEN 0 ELSE COUNT END count
		FROM template_type tt
		LEFT JOIN(
		SELECT tc.tp_type_id,
		COUNT(1) COUNT
		FROM template_content tc
		WHERE tc.orgid = #{orgid}
		<if test="keyword != null and keyword !=''">
			AND tc.title like concat('%',#{keyword},'%')
		</if>
		GROUP BY tc.tp_type_id
		) t ON tt.tp_type_id =
		t.tp_type_id
		<include refid="QUERY_WHERE" />
		order by tt.order_num asc
	</select>
	<delete id="delete" parameterType="com.zltel.broadcast.template.bean.TemplateType">
		delete from template_type
		<where>
			<include refid="BASE_WHERE_PARAMS" />
		</where>
	</delete>

</mapper>