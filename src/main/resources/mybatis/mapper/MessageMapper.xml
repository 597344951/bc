<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zltel.broadcast.message.dao.MessageMapper">
  <resultMap id="BaseResultMap" type="com.zltel.broadcast.message.bean.Message">
    <id column="message_id" jdbcType="INTEGER" property="messageId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="add_date" jdbcType="TIMESTAMP" property="addDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Base_Column_List">
    message_id, type, title, content, state, user_id, source_id, add_date, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from message
    where message_id = #{messageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from message
    where message_id = #{messageId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zltel.broadcast.message.bean.Message">
    insert into message (message_id, type, title,
      content, state, user_id, source_id, add_date,
      update_date)
    values (#{messageId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{sourceId,jdbcType=INTEGER},
      #{addDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zltel.broadcast.message.bean.Message">
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="messageId != null">
        message_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="source_id != null">
        source_id,
      </if>
      <if test="addDate != null">
        add_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="messageId != null">
        #{messageId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="source_id != null">
        #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="addDate != null">
        #{addDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zltel.broadcast.message.bean.Message">
    update message
    <set>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{type,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where message_id = #{messageId,jdbcType=INTEGER} and update_date = #{updateDate,jdbcType=TIMESTAMP}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zltel.broadcast.message.bean.Message">
    update message
    set type = #{type,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where message_id = #{messageId,jdbcType=INTEGER} and update_date = #{updateDate,jdbcType=TIMESTAMP}
  </update>

  <select id="queryPendingByUser" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from message
    where type in (1, 2) and user_id in (#{userId}, -1) and state = 0
    order by update_date desc
  </select>
  <select id="queryNoticeByUser" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from message
    where type = 3 and user_id in (#{userId}, -1) and state = 0
    order by update_date desc
  </select>
  <update id="updateStateBySource" parameterType="com.zltel.broadcast.message.bean.Message">
    update message
    <set>
      state = #{state}
    </set>
    where source_id = #{sourceId,jdbcType=INTEGER} and user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>