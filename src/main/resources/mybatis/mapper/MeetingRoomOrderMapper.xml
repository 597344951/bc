<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zltel.broadcast.meeting.room.dao.MeetingRoomOrderMapper">
  <resultMap id="BaseResultMap" type="com.zltel.broadcast.meeting.room.bean.MeetingRoomOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="add_date" jdbcType="TIMESTAMP" property="addDate" />
    <result column="meeting_id" jdbcType="INTEGER" property="meetingId" />
    <result column="meeting_name" jdbcType="VARCHAR" property="meetingName" />
    <result column="meeting_room_id" jdbcType="INTEGER" property="meetingRoomId" />
    <result column="start_date" jdbcType="TIMESTAMP" property="startDate" />
    <result column="end_date" jdbcType="TIMESTAMP" property="endDate" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Base_Column_List">
    id, update_date, add_date, meeting_id, meeting_name, meeting_room_id, start_date, end_date, state
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from meeting_room_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from meeting_room_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByMeetingId" parameterType="java.lang.Integer">
    delete from meeting_room_order
    where meeting_id = #{meetingId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zltel.broadcast.meeting.room.bean.MeetingRoomOrder">
    insert into meeting_room_order (id, update_date, add_date, 
      meeting_id, meeting_name, meeting_room_id, start_date,
      end_date, state)
    values (#{id,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP}, #{addDate,jdbcType=TIMESTAMP}, 
      #{meetingId,jdbcType=INTEGER}, #{meetingName,jdbcType=VARCHAR}, #{meetingRoomId,jdbcType=INTEGER},
      #{startDate,jdbcType=TIMESTAMP}, #{endDate,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zltel.broadcast.meeting.room.bean.MeetingRoomOrder">
    insert into meeting_room_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="addDate != null">
        add_date,
      </if>
      <if test="meetingId != null">
        meeting_id,
      </if>
      <if test="meetingName != null">
        meeting_name,
      </if>
      <if test="meetingRoomId != null">
        meeting_room_id,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="addDate != null">
        #{addDate,jdbcType=TIMESTAMP},
      </if>
      <if test="meetingId != null">
        #{meetingId,jdbcType=INTEGER},
      </if>
      <if test="meetingName != null">
        #{meetingName,jdbcType=VARCHAR},
      </if>
      <if test="meetingRoomId != null">
        #{meetingRoomId,jdbcType=INTEGER},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zltel.broadcast.meeting.room.bean.MeetingRoomOrder">
    update meeting_room_order
    <set>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="addDate != null">
        add_date = #{addDate,jdbcType=TIMESTAMP},
      </if>
      <if test="meetingId != null">
        meeting_id = #{meetingId,jdbcType=INTEGER},
      </if>
      <if test="meetingName != null">
        meeting_name = #{meetingName,jdbcType=VARCHAR},
      </if>
      <if test="meetingRoomId != null">
        meeting_room_id = #{meetingRoomId,jdbcType=INTEGER},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zltel.broadcast.meeting.room.bean.MeetingRoomOrder">
    update meeting_room_order
    set update_date = #{updateDate,jdbcType=TIMESTAMP},
      add_date = #{addDate,jdbcType=TIMESTAMP},
      meeting_id = #{meetingId,jdbcType=INTEGER},
      meeting_name = #{meetingName,jdbcType=VARCHAR},
      meeting_room_id = #{meetingRoomId,jdbcType=INTEGER},
      start_date = #{startDate,jdbcType=TIMESTAMP},
      end_date = #{endDate,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByRoomId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from meeting_room_order
    where meeting_room_id = #{meetingRoomId,jdbcType=INTEGER}
    order by start_date desc
  </select>
</mapper>