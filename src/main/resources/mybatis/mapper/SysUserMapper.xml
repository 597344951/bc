<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zltel.broadcast.um.dao.SysUserMapper">
	<resultMap id="BaseResultMap" type="com.zltel.broadcast.um.bean.SysUser">
		<id column="user_id" jdbcType="INTEGER" property="userId" />
		<result column="username" jdbcType="VARCHAR" property="username" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="salt" jdbcType="VARCHAR" property="salt" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="mobile" jdbcType="VARCHAR" property="mobile" />
		<result column="theme" jdbcType="VARCHAR" property="theme" />
		<result column="status" jdbcType="TINYINT" property="status" />
		<result column="org_id" jdbcType="INTEGER" property="orgId" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="user_type" jdbcType="INTEGER" property="userType" />
		<result column="last_sign_in_time" jdbcType="TIMESTAMP" property="lastSignInTime" />
	</resultMap>
	<sql id="Base_Column_List">
		user_id, username, password, salt, email, mobile, theme, status, org_id, create_time, user_type, last_sign_in_time
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where user_id = #{userId,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from sys_user
		where user_id = #{userId,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.zltel.broadcast.um.bean.SysUser">
		insert into sys_user (user_id, username, password,
		salt, email, mobile, theme,
		status, org_id, create_time, user_type, last_sign_in_time
		)
		values (#{userId,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
		#{salt,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{theme,jdbcType=VARCHAR},
		#{status,jdbcType=TINYINT}, #{orgId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP},
		#{userType,jdbcType=INTEGER}, #{lastSignInTime,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.zltel.broadcast.um.bean.SysUser" useGeneratedKeys="true"   keyProperty="userId" keyColumn="user_id">
		insert into sys_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="username != null">
				username,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="salt != null">
				salt,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="mobile != null">
				mobile,
			</if>
			<if test="theme != null">
				theme,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="orgId != null">
				org_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="userType != null">
				user_type,
			</if>
			<if test="lastSignInTime != null">
				last_sign_in_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				#{salt,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				#{mobile,jdbcType=VARCHAR},
			</if>
			<if test="theme != null">
				#{theme,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=TINYINT},
			</if>
			<if test="orgId != null">
				#{orgId,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="userType != null">
				#{userType,jdbcType=INTEGER},
			</if>
			<if test="lastSignInTime != null">
				#{lastSignInTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.zltel.broadcast.um.bean.SysUser">
		update sys_user
		<set>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				salt = #{salt,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				mobile = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="theme != null">
				theme = #{theme,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=TINYINT},
			</if>
			<if test="orgId != null">
				org_id = #{orgId,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="userType != null">
				user_type = #{userType,jdbcType=INTEGER},
			</if>
			<if test="lastSignInTime != null">
				last_sign_in_time = #{lastSignInTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where user_id = #{userId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.zltel.broadcast.um.bean.SysUser">
		update sys_user
		set username = #{username,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		salt = #{salt,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		mobile = #{mobile,jdbcType=VARCHAR},
		theme = #{theme,jdbcType=VARCHAR},
		status = #{status,jdbcType=TINYINT},
		org_id = #{orgId,jdbcType=BIGINT},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		user_type = #{userType,jdbcType=INTEGER},
		last_sign_in_time = #{lastSignInTime,jdbcType=TIMESTAMP}
		where user_id = #{userId,jdbcType=BIGINT}
	</update>

	<select id="queryForList" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_user
	</select>

	<select id="selectByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where username = #{username}
	</select>

	
	<select id="queryAllRoles" resultType="string">
		select role.role_name from  sys_user_role sur 
			INNER JOIN sys_role ROLE on sur.role_id = ROLE.role_id and sur.user_id = #{userId}
	</select>
	
	<!-- 查询用户的所有权限 -->
	<select id="queryAllPerms" resultType="string">
		select distinct m.perms from sys_user_role ur
		LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id
		LEFT JOIN sys_menu m on rm.menu_id = m.menu_id
		where ur.user_id = #{userId} and m.perms is not null
	</select>
	
	<update id="updatePassword" parameterType="com.zltel.broadcast.um.bean.SysUser">
		update sys_user set `password` = #{password} , salt=#{salt}
			where user_id = #{userId}
	</update>
	
	
	<select id="querySysUsers" parameterType="com.zltel.broadcast.um.bean.SysUser" resultMap="BaseResultMap">
		select
			<include refid="Base_Column_List" />
		from sys_user
		where 
			1 = 1
			<if test="userId != null"> and 
				user_id = #{userId}
			</if>
			<if test="username != null"> and 
				username = #{username}
			</if>
			<if test="email != null"> and 
				email = #{email}
			</if>
			<if test="mobile != null"> and 
				mobile = #{mobile}
			</if>
			<if test="theme != null and theme != ''"> and 
				theme = #{theme}
			</if>
			<if test="status != null"> and 
				status = #{status}
			</if>
			<if test="orgId != null"> and 
				org_id = #{orgId}
			</if>
			<if test="afterTime != null"> and 
				create_time >= #{afterTime}
			</if>
			<if test="beforeTime != null"> and 
				create_time &lt;= #{beforeTime}
			</if>
	</select>
	
	<delete id="deleteByUserName" parameterType="com.zltel.broadcast.um.bean.SysUser">
		delete from sys_user
		where username = #{username}
	</delete>
</mapper>