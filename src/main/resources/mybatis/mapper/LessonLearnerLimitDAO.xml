<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zltel.broadcast.lesson.dao.LessonLearnerLimitDAO">
	<resultMap id="BaseResultMap" type="com.zltel.broadcast.lesson.bean.LessonLearnerLimit">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="lesson_unit_id" jdbcType="INTEGER" property="lessonUnitId" />
		<result column="org_id" jdbcType="INTEGER" property="orgId" />
	</resultMap>
	<sql id="Base_Column_List">
		id, lesson_unit_id, org_id
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from lesson_learner_limit
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectListByLessonUnitId" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from lesson_learner_limit
		where lesson_unit_id = #{lessonUnitId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from lesson_learner_limit
		where id =
		#{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.zltel.broadcast.lesson.bean.LessonLearnerLimit">
		insert into lesson_learner_limit (id, lesson_unit_id,
		org_id
		)
		values (#{id,jdbcType=INTEGER}, #{lessonUnitId,jdbcType=INTEGER}, #{orgId,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.zltel.broadcast.lesson.bean.LessonLearnerLimit">
		insert into lesson_learner_limit
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="lessonUnitId != null">
				lesson_unit_id,
			</if>
			<if test="orgId != null">
				org_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="lessonUnitId != null">
				#{lessonUnitId,jdbcType=INTEGER},
			</if>
			<if test="orgId != null">
				#{orgId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.zltel.broadcast.lesson.bean.LessonLearnerLimit">
		update lesson_learner_limit
		<set>
			<if test="lessonUnitId != null">
				lesson_unit_id = #{lessonUnitId,jdbcType=INTEGER},
			</if>
			<if test="orgId != null">
				org_id = #{orgId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.zltel.broadcast.lesson.bean.LessonLearnerLimit">
		update lesson_learner_limit
		set lesson_unit_id = #{lessonUnitId,jdbcType=INTEGER},
		org_id = #{orgId,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- 查询 LessonLearnerLimit -->
	<select id="query" parameterType="com.zltel.broadcast.lesson.bean.LessonLearnerLimit"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from Lesson_learnerLimit
		<where>
			<include refid="LessonLearnerLimitWhereParams" />
		</where>
	</select>

	<delete id="delete" parameterType="com.zltel.broadcast.lesson.bean.LessonLearnerLimit">
		delete from lesson_learner_limit
		<where>
			<include refid="LessonLearnerLimitWhereParams" />
			<!-- 避免查询参数为空带来的全部删除 -->
			or 1!=1
		</where>
	</delete>

	<!-- 查询条件 LessonLearnerLimit -->
	<sql id="LessonLearnerLimitWhereParams">
		<if test="lessonUnitId != null">
			AND lesson_unit_id=#{lessonUnitId}
		</if>
		<if test="id != null">
			AND id=#{id}
		</if>
		<if test="orgId != null">
			AND org_id=#{orgId}
		</if>
	</sql>
</mapper>